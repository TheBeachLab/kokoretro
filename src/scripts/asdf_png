#!/usr/bin/env python

import sys
import os

HELP = '''command line:  input.asdf output.png [pixels/mm [a [b]]]
   input.asdf = input asdf file (mm units)
   output.png = output 16-bit greyscale png
   pixels/mm  = pixels per mm (default 10)
   a          = rotation about the z axis (default 0)
   b          = rotation about the x axis (default 0)'''

if not (3 <= len(sys.argv) <= 6):
    print HELP
    sys.exit()

try:
    resolution = 10. if len(sys.argv) < 4 else float(sys.argv[3])
except ValueError:
    sys.stderr.write('asdf_png error: resolution must be a floating-point value.')
    sys.exit(1)
    
try:
    alpha = 0. if len(sys.argv) < 5 else float(sys.argv[4])
    beta  = 0. if len(sys.argv) < 6 else float(sys.argv[5])
except ValueError:
    sys.stderr.write('asdf_png error: alpha and beta must be floating-point values.')
    sys.exit(1)

if not os.path.exists(sys.argv[1]):
    sys.stderr.write(
        "asdf_png error: Can't find input file %s\n." % sys.argv[1]) 
    sys.exit(1)

# Load the ASDF file into memory.
from koko.fab.asdf import ASDF
print "Loading ASDF file...   ",
sys.stdout.flush()
asdf = ASDF.load(sys.argv[1])

# Then render it to an image.
print "Done.\nRendering to 16-bit greyscale PNG...   ",
sys.stdout.flush()
img  = asdf.render(alpha=alpha, beta=beta, resolution=resolution)

# Finally, save the image.
print "Done.\nSaving image (%i by %i pixels)...  " % (img.width, img.height),
sys.stdout.flush()
img.save(sys.argv[2])

print "Done."
