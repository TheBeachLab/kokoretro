#!/usr/bin/env python

import sys
import os
from math import log, exp

HELP = '''command line:  asdf_histogram input.asdf [bins]
   input.asdf = input asdf file
   bins = number of histogram bins
'''
    
if len(sys.argv) < 2:
    print HELP
    sys.exit()

bins = 10
if len(sys.argv) == 3:
    try:
        bins = int(sys.argv[2])
    except ValueError:
        sys.stderr.write(
            "asdf_histogram error: Invalid bin count %s\n." % sys.argv[3])
        sys.exit(1)
        

if not os.path.exists(sys.argv[1]):
    sys.stderr.write(
        "asdf_histogram error: Can't find input file %s\n." % sys.argv[1]) 
    sys.exit(1)

# Load the ASDF file into memory.
from koko.c.asdf import ASDF
print "Loading ASDF file...   ",
sys.stdout.flush()
asdf = ASDF.load(sys.argv[1])

# Then find the histogram.
print "Done.\nFinding histogram with %i bins...   " % bins,
sys.stdout.flush()
bins = asdf.histogram(bins)

# Finally, save the image.
print "Done.\nDisplaying histogram...",
import matplotlib.pylab as plt
from matplotlib import rc
rc('text', usetex=True)

plt.figure(1)
ax = plt.subplot(111)

colors = 'rbyg'
labels = ['Filled','Empty','Branch','Leaf']
bars = [None]*4
ax = plt.subplot(111)
ystart = [0 for i in bins[0]]

totals = map(sum, zip(*bins))
for i in range(4):
    start = [a+0.1 for a in range(len(bins[i]))]

    data = [b*log(t,8)/t for b,t in zip(bins[i], totals)]
    bars[i] = ax.bar(start, data, width=0.8,
                     color=colors[i], bottom=ystart,
                     label=labels[i])
    ystart = [y+b for y,b in zip(ystart, data)]

plt.ylabel('Total cell count')
plt.xlabel('Cell depth')
plt.legend(loc='upper left')
plt.ylim((0, plt.ylim()[1]+0.25))
plt.xlim((1, len(bins[0])))
x, t = plt.xticks()
plt.xticks([i+0.5 for i in x[:-1]], [int(i) for i in x[:-1]])

y, t = plt.yticks()
plt.yticks(y[:-1], ['$8^{%i}$'%i for i in y[:-1]])

plt.show()

print "Done."
